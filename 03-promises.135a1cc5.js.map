{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CC,EAASJ,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CE,EAAOH,SAASI,cAAc,SAC9BC,EAAYL,SAASI,cAAc,yBAEzCC,EAAUC,MAAMC,SAAW,OAC3BF,EAAUC,MAAME,QAAU,MAE1B,IAAK,MAAMC,KAASZ,EAClBY,EAAMH,MAAMI,QAAU,eACtBD,EAAMH,MAAMC,SAAW,OACvBE,EAAMH,MAAMK,WAAa,MAG3B,IAAK,MAAMC,KAASV,EAClBU,EAAMN,MAAMI,QAAU,QACtBE,EAAMN,MAAME,QAAU,MACtBI,EAAMN,MAAMC,SAAW,OAGzB,MAAMM,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASC,KACbC,YAAW,QAAUJ,GACbK,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,OAKxB,IAAIO,EAAK,EAETnB,EAAKoB,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMC,EAAcC,OAAOxB,EAAKyB,SAASC,OAAOC,OAC1CC,EAAYJ,OAAOxB,EAAKyB,SAASI,KAAKF,OACtCG,EAAaN,OAAOxB,EAAKyB,SAASb,MAAMe,OAC/BX,YAAW,KACxBN,EAAcS,EAAIW,GACfC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxC,GAASyC,OAAOC,QACd,uBAAqBvB,QAAiBC,WAGzCuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxC,GAASyC,OAAOG,QACd,sBAAoBzB,QAAiBC,WAG3C,IAAIyB,EAAYC,aAAY,KAC1BnB,GAAM,EAEFA,GAAMI,EACRb,EAAcS,EAFDW,EAAaF,GAAaT,EAAK,IAGzCY,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxC,GAASyC,OAAOC,QACd,uBAAqBvB,QAAiBC,WAGzCuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxC,GAASyC,OAAOG,QACd,sBAAoBzB,QAAeC,WAIzC2B,cAAcF,KAEfT,KACFE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst labels = Array.from(document.querySelectorAll('label'));\nconst inputs = Array.from(document.querySelectorAll('input'));\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector(`button[type=\"submit\"]`);\n\nsubmitBtn.style.fontSize = '15px';\nsubmitBtn.style.padding = '5px';\n\nfor (const label of labels) {\n  label.style.display = 'inline-block';\n  label.style.fontSize = '15px';\n  label.style.fontWeight = '600';\n}\n\nfor (const input of inputs) {\n  input.style.display = 'block';\n  input.style.padding = '5px';\n  input.style.fontSize = '15px';\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    let setTime = setTimeout(() => {}, delay)\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  });\n};\n\nlet ms = 1;\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const valueAmount = Number(form.elements.amount.value);\n  const valueStep = Number(form.elements.step.value);\n  const valueDelay = Number(form.elements.delay.value);\n  let firstSet = setTimeout(() => {\n    createPromise(ms, valueDelay)\n      .then(({ position, delay}) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay}) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    let secondSet = setInterval(() => {\n      ms += 1;\n      let stepTime = valueDelay + valueStep * (ms - 1);\n      if (ms <= valueAmount) {\n        createPromise(ms, stepTime)\n          .then(({ position, delay}) => {\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delay} ms`\n            );\n          })\n          .catch(({ position, delay}) => {\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delay} ms`\n            );\n          });\n      } else {\n        clearInterval(secondSet);\n      }\n    }, valueStep);\n  }, valueDelay);\n});\n\n// console.log(Number(form.elements.amount.value));\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$labels","Array","from","document","querySelectorAll","$47d4ff9957288465$var$inputs","$47d4ff9957288465$var$form","querySelector","$47d4ff9957288465$var$submitBtn","style","fontSize","padding","label","display","fontWeight","input","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$47d4ff9957288465$var$ms","addEventListener","event","preventDefault","valueAmount","Number","elements","amount","value","valueStep","step","valueDelay","then","$parcel$interopDefault","Notify","success","catch","failure","secondSet","setInterval","clearInterval"],"version":3,"file":"03-promises.135a1cc5.js.map"}