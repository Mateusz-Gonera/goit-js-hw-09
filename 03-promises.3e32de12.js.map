{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CC,EAASJ,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CE,EAAOH,SAASI,cAAc,SAC9BC,EAAYL,SAASI,cAAe,yBAE1CC,EAAUC,MAAMC,SAAW,OAC3BF,EAAUC,MAAME,QAAU,M,IAErBC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAejB,EAAMkB,OAAAC,cAArBP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,EAAY,CAAvB,IAAMU,EAANN,EAAWO,MACdD,EAAMb,MAAMe,QAAU,eACtBF,EAAMb,MAAMC,SAAW,OACvBY,EAAMb,MAAMgB,WAAa,O,SAHtBZ,GAAW,EAAXC,EAAWY,E,YAAXd,GAAW,MAAXK,EAAWU,QAAXV,EAAWU,S,WAAXd,E,MAAAC,G,IAMAc,GAAW,EAAXC,GAAW,EAAXC,OAAWf,E,IAAhB,QAAKgB,EAAAC,EAAe3B,EAAMa,OAAAC,cAArBS,GAAAG,EAAAC,EAAWZ,QAAAC,MAAXO,GAAW,EAAY,CAAvB,IAAMK,EAANF,EAAWR,MACdU,EAAMxB,MAAMe,QAAU,QACtBS,EAAMxB,MAAME,QAAU,MACtBsB,EAAMxB,MAAMC,SAAW,Q,SAHpBmB,GAAW,EAAXC,EAAWI,E,YAAXN,GAAW,MAAXI,EAAWL,QAAXK,EAAWL,S,WAAXE,E,MAAAC,GAML,IAAMK,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACbC,YAAW,cAAUJ,GACbK,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,cAKpBO,EAAK,EAETtC,EAAKuC,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACN,IAAMC,EAAcC,OAAO3C,EAAK4C,SAASC,OAAO5B,OAC1C6B,EAAYH,OAAO3C,EAAK4C,SAASG,KAAK9B,OACtC+B,EAAaL,OAAO3C,EAAK4C,SAASb,MAAMd,OAC/BkB,YAAW,WACxBN,EAAcS,EAAIU,GACfC,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA3D,GAAS4D,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,WAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA3D,GAAS4D,OAAOI,QACd,sBAAuCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,WAGnD,IAAI0B,EAAYC,aAAY,YAC1BpB,GAAM,IAEII,EACRb,EAAcS,EAFDU,EAAaF,GAAaR,EAAK,IAGzCW,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA3D,GAAS4D,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,WAGjDwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA3D,GAAS4D,OAAOI,QACd,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,WAIjD4B,cAAcF,KAEfX,KACFE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst labels = Array.from(document.querySelectorAll('label'));\nconst inputs = Array.from(document.querySelectorAll('input'));\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector(`button[type=\"submit\"]`);\n\nsubmitBtn.style.fontSize = '15px';\nsubmitBtn.style.padding = '5px';\n\nfor (const label of labels) {\n  label.style.display = 'inline-block';\n  label.style.fontSize = '15px';\n  label.style.fontWeight = '600';\n}\n\nfor (const input of inputs) {\n  input.style.display = 'block';\n  input.style.padding = '5px';\n  input.style.fontSize = '15px';\n}\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    let setTime = setTimeout(() => {}, delay)\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  });\n};\n\nlet ms = 1;\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const valueAmount = Number(form.elements.amount.value);\n  const valueStep = Number(form.elements.step.value);\n  const valueDelay = Number(form.elements.delay.value);\n  let firstSet = setTimeout(() => {\n    createPromise(ms, valueDelay)\n      .then(({ position, delay}) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay}) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    let secondSet = setInterval(() => {\n      ms += 1;\n      let stepTime = valueDelay + valueStep * (ms - 1);\n      if (ms <= valueAmount) {\n        createPromise(ms, stepTime)\n          .then(({ position, delay}) => {\n            Notiflix.Notify.success(\n              `✅ Fulfilled promise ${position} in ${delay} ms`\n            );\n          })\n          .catch(({ position, delay}) => {\n            Notiflix.Notify.failure(\n              `❌ Rejected promise ${position} in ${delay} ms`\n            );\n          });\n      } else {\n        clearInterval(secondSet);\n      }\n    }, valueStep);\n  }, valueDelay);\n});\n\n// console.log(Number(form.elements.amount.value));\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$labels","Array","from","document","querySelectorAll","$ce04d3a99e08e73b$var$inputs","$ce04d3a99e08e73b$var$form","querySelector","$ce04d3a99e08e73b$var$submitBtn","style","fontSize","padding","$ce04d3a99e08e73b$var$_iteratorNormalCompletion","$ce04d3a99e08e73b$var$_didIteratorError","$ce04d3a99e08e73b$var$_iteratorError","undefined","$ce04d3a99e08e73b$var$_step","$ce04d3a99e08e73b$var$_iterator","Symbol","iterator","next","done","$ce04d3a99e08e73b$var$label","value","display","fontWeight","err","return","$ce04d3a99e08e73b$var$_iteratorNormalCompletion1","$ce04d3a99e08e73b$var$_didIteratorError1","$ce04d3a99e08e73b$var$_iteratorError1","$ce04d3a99e08e73b$var$_step1","$ce04d3a99e08e73b$var$_iterator1","$ce04d3a99e08e73b$var$input","err1","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$ce04d3a99e08e73b$var$ms","addEventListener","event","preventDefault","valueAmount","Number","elements","amount","valueStep","step","valueDelay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","secondSet","setInterval","clearInterval"],"version":3,"file":"03-promises.3e32de12.js.map"}