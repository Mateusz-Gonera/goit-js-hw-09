{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAASC,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CC,EAASJ,MAAMC,KAAKC,SAASC,iBAAiB,UAC9CE,EAAOH,SAASI,cAAc,SAClBJ,SAASI,cAAc,yBAEzC,IAAK,MAAMC,KAASR,EAClBQ,EAAMC,MAAMC,QAAU,eAGxB,IAAK,MAAMC,KAASN,EAClBM,EAAMF,MAAMC,QAAU,QAaxB,IAAIE,EAAK,EACTN,EAAKO,iBAAiB,UAAWC,IAC/BA,EAAMC,iBAESC,YAAW,KACxBC,QAAQC,IAAI,GAAGN,KACb,IAAIO,EAAYC,aAAY,KAC1BR,GAAM,EACFA,GAAMS,OAAOf,EAAKgB,SAASC,OAAOC,OACpCP,QAAQC,IAAI,GAAGN,KAEfa,cAAcN,KAEfE,OAAOf,EAAKgB,SAASI,KAAKF,UAC5BH,OAAOf,EAAKgB,SAASK,MAAMH","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst labels = Array.from(document.querySelectorAll(\"label\"));\nconst inputs = Array.from(document.querySelectorAll(\"input\"));\nconst form = document.querySelector(\".form\");\nconst submitBtn = document.querySelector(`button[type=\"submit\"]`);\n\nfor (const label of labels) {\n  label.style.display = \"inline-block\";\n};\n\nfor (const input of inputs) {\n  input.style.display = \"block\";\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  } else {\n    // Reject\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n  }\n}\nlet ms = 1;\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  \n  let firstSet = setTimeout(() => {\n    console.log(`${ms}`);\n      let secondSet = setInterval(() => {\n        ms += 1;\n        if (ms <= Number(form.elements.amount.value)) {\n          console.log(`${ms}`);\n        } else {\n          clearInterval(secondSet);          \n        };\n      }, Number(form.elements.step.value))      \n    }, Number(form.elements.delay.value))  \n  \n})\n\n\n// console.log(Number(form.elements.amount.value));"],"names":["parcelRequire","$47d4ff9957288465$var$labels","Array","from","document","querySelectorAll","$47d4ff9957288465$var$inputs","$47d4ff9957288465$var$form","querySelector","label","style","display","input","$47d4ff9957288465$var$ms","addEventListener","event","preventDefault","setTimeout","console","log","secondSet","setInterval","Number","elements","amount","value","clearInterval","step","delay"],"version":3,"file":"03-promises.33929fa9.js.map"}